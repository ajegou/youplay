#!/bin/bash

query=$@

if [[ -z $query ]]; then
  exit 1
fi

if [[ "$query" == *youtube.com* ]]; then
  echo "Looking up videos from page: '$query'"
  search_url=$query
else
  echo "Searching videos for: '$query'"
  search_url="https://www.youtube.com/results?search_query="$(echo $query | sed 's/ /%20/g') # would be good to properly encode the query
fi

# crawl
index=1
while read line; do
  url=$(echo $line | sed 's/.*href="\([^"]*\)".*/\1/')
  title=$(echo $line | sed 's/ title=/\ntitle=/g' | grep 'title=' | head -n 1 | sed 's/.*title="\([^"]*\)".*/\1/')
  duration=$(echo $line | grep "Duration" | sed 's/.*Duration: \([^\.,]*\).*/\1/')
  if [[ -z $title ]]; then
    echo "Failed extraction from: $line"
  else
    fullurl="https://www.youtube.com"$url
    links[$index]="$fullurl"
    echo -e "[$index]\t$fullurl\t$duration\t$title"
    index=$(($index + 1))
  fi
done < <(curl --silent --header 'Accept-Language: en' "$search_url" | tr -d '\n' | sed 's;<div;\n<div;g' | egrep '"content-wrapper"|yt-lockup-content') # put newlines after each closing div and remove others

read -p 'Watchiou wanna see? ' index

link=${links[$index]}
if [[ -z $link ]]; then
  echo "Could not find an entry for '$index'"
fi

echo "Opening: $link"
if [[ $link == */watch* ]]; then
  youplay $link
else
  yousearch $link
fi
